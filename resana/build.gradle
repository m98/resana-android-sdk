apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'digital.wup.android-maven-publish'

def packageName = 'io.resana'
def libraryVersion = '7.4.6'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    sourceSets { main { res.srcDirs = ['src/main/res', 'src/main/res/values/styles'] } }

    buildTypes {
        release {
            minifyEnabled false
//            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro'
        }
    }
}

version = '7.4.6'

task jar(type: Jar, dependsOn: 'assembleRelease') {
    from fileTree(dir: 'build/intermediates/classes/release')
}

dependencies {
    implementation 'com.google.code.gson:gson:2.8.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support:support-annotations:28.0.0'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    // required if you want to use Mockito for Android tests
    androidTestImplementation 'org.mockito:mockito-android:2.7.22'
//    /*testCompile*/ compile 'junit:junit:4.12'
//    /*androidTestCompile*/ compile 'com.android.support:support-annotations:25.4.0'
//    /*androidTestCompile*/ compile 'com.android.support.test:runner:1.0.0'
//    /*androidTestCompile*/ compile 'com.android.support.test:rules:1.0.0'
//    /*androidTestCompile*/ compile 'org.hamcrest:hamcrest-library:1.3'
}

publishing {
    publications {
        aar(MavenPublication) {
            from components.android
            groupId packageName
            version = libraryVersion
            artifactId project.getName()

            // Tell maven to prepare the generated "*.aar" file for publishing
            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
        }
    }
}

artifactory {
    contextUrl = 'https://maven.oddrun.ir/artifactory'
    publish {
        repository {
            // The Artifactory repository key to publish to
            repoKey = 'resana'

            username = "${artifactory_username}"
            password = "${artifactory_password}"
        }
        defaults {
            // Tell the Artifactory Plugin which artifacts should be published to Artifactory.
            publications('aar')
            publishArtifacts = true

            // Properties to be attached to the published artifacts.
            properties = ['qa.level': 'basic', 'dev.team': 'core']
            // Publish generated POM files to Artifactory (true by default)
            publishPom = true
        }
    }
}